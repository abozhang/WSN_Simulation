[General]
# 仿真设置
network = wsn_simulation.WSNNetwork
sim-time-limit = 3600s
cpu-time-limit = 600s
repeat = 1
seed-set = ${repetition}

# 调试设置
debug-on-errors = true
print-undisposed = true

# 记录设置
**.scalar-recording = true
**.vector-recording = true

# 网络设置
*.numClusters = 5
*.nodesPerCluster = 200
*.playgroundSizeX = 1000m
*.playgroundSizeY = 1000m

# 移动性设置
*.enableMobility = true
*.mobilityType = "humanMobility"

# 通道模型设置
*.pathLossExponent = 3.5
*.shadowingStddev = 4.0
*.maxCommunicationRange = 500m

# 控制节点设置
*.controlNode.nodeId = 0
*.controlNode.x = 500m
*.controlNode.y = 500m
*.controlNode.z = 30m
*.controlNode.isMobile = false

# 簇头节点设置
*.clusterHeads[*].nodeId = "1+index"
*.clusterHeads[*].x = ${chX=200,350,650,800,500}m
*.clusterHeads[*].y = ${chY=200,800,200,800,500}m
*.clusterHeads[*].z = 20m
*.clusterHeads[*].isMobile = false

# 普通节点设置 - 通过脚本动态分配位置
*.ordinaryNodes[*].nodeId = "1000+index"
*.ordinaryNodes[*].x = uniform(0m, playgroundSizeX)
*.ordinaryNodes[*].y = uniform(0m, playgroundSizeY)
*.ordinaryNodes[*].z = uniform(1m, 5m)

# 簇头计算位置
*.clusterHeads[0].x = 200m
*.clusterHeads[0].y = 200m
*.clusterHeads[1].x = 350m
*.clusterHeads[1].y = 800m
*.clusterHeads[2].x = 650m
*.clusterHeads[2].y = 200m
*.clusterHeads[3].x = 800m
*.clusterHeads[3].y = 800m
*.clusterHeads[4].x = 500m
*.clusterHeads[4].y = 500m

# 人类移动模型设置
*.*.mobility.walkSpeed = 1.2mps
*.*.mobility.runSpeed = 3.0mps
*.*.mobility.pauseTimeMean = 30s
*.*.mobility.pauseTimeStdDev = 10s
*.*.mobility.stateChangeProbability = 0.1
*.*.mobility.randomDestRadius = 50m
*.*.mobility.waypointProximity = 1m

# 通信设置
*.*.communication.transmitPower = 100mW
*.controlNode.communication.transmitPower = 500mW
*.clusterHeads[*].communication.transmitPower = 200mW
*.*.communication.bitRate = 250kbps
*.*.communication.sensitivity = -100dBm

# 通道设置
**.WSNChannel.pathLossExponent = ${pathLossExponent=3.5}
**.WSNChannel.shadowingStddev = ${shadowingStddev=4.0}
**.WSNChannel.carrierFrequency = 433MHz
**.WSNChannel.maxDistance = ${maxCommunicationRange=500m}

# 时间同步设置
*.*.timeSync.clockDrift = normal(100ppm, 10ppm)
*.*.timeSync.syncInterval = 60s

# 电池设置
*.controlNode.battery.initialCapacity = 5000mAh
*.clusterHeads[*].battery.initialCapacity = 3000mAh
*.ordinaryNodes[*].battery.initialCapacity = 1000mAh

# -------------------------------------------------------------------------

[Config Basic]
description = "基本仿真场景，部分节点静态，部分节点人类移动模式"
*.enableMobility = true
*.mobilityType = "humanMobility"
# 只有一部分普通节点是移动的
*.ordinaryNodes[*].isMobile = ${mobility=false}
*.ordinaryNodes[0..49].isMobile = true

[Config AllMobile]
description = "所有普通节点都采用人类移动模式"
*.enableMobility = true
*.mobilityType = "humanMobility"
*.ordinaryNodes[*].isMobile = true

[Config MixedMobility]
description = "混合移动模型场景"
*.enableMobility = true
*.ordinaryNodes[0..199].mobilityType = "humanMobility"
*.ordinaryNodes[200..399].mobilityType = "randomWaypoint"
*.ordinaryNodes[400..599].mobilityType = "gaussMarkov"
*.ordinaryNodes[600..999].mobilityType = "static"
*.ordinaryNodes[0..599].isMobile = true
*.ordinaryNodes[600..999].isMobile = false

[Config ClusterHeadRotation]
description = "测试簇头轮换功能"
extends = Basic
# 更频繁地检查簇头状态
**.ControlNodeApplication.clusterHeadCheckInterval = 60s
# 簇头电池容量较小，更容易触发轮换
*.clusterHeads[*].battery.initialCapacity = 2000mAh
# 第3个簇头电池电量特别低，应该很快被替换
*.clusterHeads[2].battery.initialCapacity = 500mAh

[Config PathLossVariations]
description = "测试不同路径损耗指数对网络的影响"
extends = Basic
# 测试多种路径损耗指数
**.WSNChannel.pathLossExponent = ${pathLoss=2.0, 2.5, 3.0, 3.5, 4.0}

[Config CommunicationRangeTest]
description = "测试不同通信距离对网络的影响"
extends = Basic
# 测试多种通信距离
**.WSNChannel.maxDistance = ${commRange=300m, 400m, 500m, 600m, 700m}

[Config FrequencyInterferenceTest]
description = "测试频率干扰对网络的影响"
extends = Basic
# 修改部分节点的频段，造成干扰
*.ordinaryNodes[0..29].frequency = "clusterId + 1 % 5 + 1" # 错误的频段
